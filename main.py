import requests
import random
from bs4 import BeautifulSoup
import time
import os

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0 Safari/537.36"
}

MAX_RETRIES = 1000        # –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞–π—Ç–∏ –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é
TIMEOUT = 2
BASE_URL = "https://infostart.ru/1c/articles/"  # ‚úÖ –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram ---
TELEGRAM_TOKEN = "8114950949:AAF_pK08B4IL17I0PgKthvLvqmxeRWmOA4w"
TELEGRAM_CHAT = "@VsratiyIS"
TELEGRAM_API = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendPhoto"  # ‚úÖ –ü—Ä–æ–±–µ–ª —É–±—Ä–∞–Ω!

# --- –§—É–Ω–∫—Ü–∏—è: –ø–æ–ª—É—á–∏—Ç—å URL —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç–∞—Ç—å–∏ ---
def get_random_article_url():
    for _ in range(MAX_RETRIES):
        article_id = random.randint(1000000, 4100000)#(1755375,1755375)#
        url = f"{BASE_URL}{article_id}/"
        try:
            response = requests.get(url, headers=HEADERS, timeout=TIMEOUT)
            if response.status_code == 200:
                print(f"‚úÖ –°—Ç–∞—Ç—å—è –Ω–∞–π–¥–µ–Ω–∞: {url}")
                return url
            else:
                print(f"‚ùå –°—Ç–∞—Ç—å—è {article_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–∫–æ–¥ {response.status_code}) –æ—Ç–≤–µ—Ç {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {article_id}: {e}")
        time.sleep(0.3)
    return None

# --- –§—É–Ω–∫—Ü–∏—è: –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ---
def get_images_from_article(url):
    try:
        response = requests.get(url, headers=HEADERS, timeout=TIMEOUT)
        if response.status_code != 200:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É: {url}")
            return []

        soup = BeautifulSoup(response.text, 'html.parser')
        image_urls = []

        # <img src="...">
        for img in soup.find_all('img', src=True):
            src = img['src']
            if src.startswith('/'):
                src = f"https://infostart.ru{src}"  # ‚úÖ –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!
            image_urls.append(src)

        # style="background-image: url(...)"
        for div in soup.find_all(style=True):
            style = div.get('style')
            if 'background-image' in style:
                start = style.find("url(") + 4
                end = style.find(")", start)
                if start != -1 and end != -1:
                    bg_url = style[start:end].strip("'\" ")
                    if bg_url.startswith('/'):
                        bg_url = f"https://infostart.ru{bg_url}"  # ‚úÖ –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!
                    elif not bg_url.startswith('http'):
                        bg_url = requests.compat.urljoin(url, bg_url)
                    image_urls.append(bg_url)

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: —Ç–æ–ª—å–∫–æ infostart –∏ –±–µ–∑ no_avatar_forum
        filtered = [img for img in image_urls if 'infostart' in img and 'no_avatar_forum' not in img]
        return list(set(filtered))  # —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {e}")
        return []

# --- –§—É–Ω–∫—Ü–∏—è: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –≤ Telegram ---
def send_image_to_telegram(image_url, caption=""):
    if not is_valid_image(image_url):
        return

    try:
        response = requests.post(
            TELEGRAM_API,
            data={'chat_id': TELEGRAM_CHAT, 'caption': caption, 'parse_mode': 'HTML'},
            files={'photo': requests.get(image_url, headers=HEADERS, stream=True).raw},
            timeout=TIMEOUT
        )
        if response.status_code == 200:
            print(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {image_url}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.status_code}, {response.text}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

def is_valid_image(url):
    valid_extensions = {".jpg", ".jpeg", ".png", ".webp", ".gif"}
    ext = os.path.splitext(url)[1].lower()
    if ext not in valid_extensions:
        print(f"üö´ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: {url}")
        return False
    return True

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Telegram...")
    sent_count = 0

    while True:
        print("\nüîç –ü–æ–∏—Å–∫ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏...")
        article_url = get_random_article_url()
        if not article_url:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç—å—é. –ü–æ–≤—Ç–æ—Ä...")
            #time.sleep(2)
            continue

        images = get_images_from_article(article_url)
        print(f"üì∑ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}")

        if images:
            for img in images:
                try:
                    caption = f"üìå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Å—Ç–∞—Ç—å–∏:\n{article_url}"
                    send_image_to_telegram(img, caption=caption)
                    sent_count += 1
                    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {sent_count} –∏–∑ {len(images)}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                    continue
            
            print(f"üì§ –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {sent_count}")
            time.sleep(300)
        else:
            print("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

        time.sleep(1)

if __name__ == "__main__":
    main()
